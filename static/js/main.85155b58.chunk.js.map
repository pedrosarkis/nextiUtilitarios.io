{"version":3,"sources":["helper/calculator.js","components/Nightly.js","pages/hoursConverter/style.js","pages/hoursConverter/index.js","pages/multiplyingFactor/style.js","pages/multiplyingFactor/index.js","pages/hoursCalculator/styles.js","pages/hoursCalculator/index.js","pages/mainPage/index.js","styles/global.js","App.js","reportWebVitals.js","index.js"],"names":["mountResult","seconds","hours","extractHoursFromSeconds","minutes","extractMinutesFromSeconds","sumHoursAndMinutes","map","hour","minute","normalizeHoursAndMinutes","reduce","acc","curr","hourToSeconds","minutesToSeconds","removeUnderline","string","replaceAll","Math","floor","abs","getNightlyFactor","Container","styled","div","ContainerRow","TextAreaNoResize","textarea","Label","label","Input","input","NightlyFactor","nightlyTime","setTime","calc","result","remove","handleOnChangeValue","target","value","name","isNaN","onChange","readOnly","cols","rows","Object","keys","length","toString","padStart","Button","style","marginRight","variant","color","onClick","HoursConverter","useState","sexagesimal","setSexagesimal","centesimal","setCentesimal","handleChangeSexagesimal","e","time","split","converterToCentesimal","handleChangeCentesimal","round","converterToSexagesimal","mask","MultiplyingFactor","bancoDeHoras","setBancoDeHoras","fator","setFator","setResult","id","totalSeconds","parseInt","hoursToSeconds","hoursAndMinutes","factorMinutes","marginBottom","Modal","HoursCalculator","numberOfInputs","setNumberOfInputs","hoursInputRef","useRef","minutesInputRef","doCalc","operation","current","elem","index","decreaseHoursAndMinutes","backgroundColor","width","Array","fill","className","TextField","inputRef","element","filter","forEach","inputProps","useStyles","makeStyles","root","flexGrow","IndexPage","setValue","setNightlyTime","resultNightly","setResultNightly","tabChooser","Nightly","nightlyResult","minutesInSeconds","calcNightlyFactor","resultRemoval","ceil","removeNightlyFactor","classes","Paper","position","zIndex","Tabs","event","newValue","indicatorColor","textColor","centered","Tab","paddingTop","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85155b58.chunk.js","sourcesContent":["const mountResult = seconds => ({hours: extractHoursFromSeconds(seconds), minutes: extractMinutesFromSeconds(seconds)});\n\nconst normalizeHoursAndMinutes = (hours, minutes) => [...hours.map(hour => hour * 3600), ...minutes.map(minute => minute * 60)];\n\nconst sumHoursAndMinutes = ({hours, minutes}) => mountResult(normalizeHoursAndMinutes(hours, minutes).reduce((acc, curr) => acc + curr, 0));\n\nconst decreaseHoursAndMinutes = ({hours, minutes}) => mountResult(hours.map((hour, index) =>  hour * 3600 + minutes[index] * 60).reduce((acc, curr) => acc - curr));\n    //Aqui tem que ver bem , pois existem vários comportamentos possíveis ( e não errados ) para uma subtração em massa.\n\n// const sum = ({ hour1 = 0, hour2 = 0, minute1 = 0, minute2 = 0 }) => {\n//     const sumHours = hourToSeconds(hour1) + hourToSeconds(hour2);\n//     const sumMinutes = minutesToSeconds(minute1) + minutesToSeconds(minute2);\n//     return mountResult(sumHours + sumMinutes);\n// };\n\n// const decrease = ({ hour1 = 0, hour2 = 0, minute1 = 0, minute2 = 0 }) => {\n//     const sumFirstLine = hourToSeconds(hour1) + minutesToSeconds(minute1);\n//     const sumSecondLine = hourToSeconds(hour2) + minutesToSeconds(minute2);\n\n//     return mountResult(sumFirstLine - sumSecondLine);\n// };\n\nconst reset = (setTime) => {\n    setTime({});\n    return {};\n};\n\nconst calcNightlyFactor = ({ hours, minutes }) => {\n    const minutesInSeconds = minutes ? minutesToSeconds(minutes) : 0;\n    const totalSeconds = hours ? hourToSeconds(hours) + minutesInSeconds : minutesInSeconds;\n\n    return !minutesInSeconds && !totalSeconds ? {} : mountResult(totalSeconds * getNightlyFactor());\n};\n\nconst removeNightlyFactor = ({ hours, minutes }) => {\n    const minutesInSeconds = minutes ? minutesToSeconds(minutes) : 0;\n    const totalSeconds = hours ? hourToSeconds(hours) + minutesInSeconds : minutesInSeconds;\n\n    return !minutesInSeconds && !totalSeconds ? {} : mountResult(Math.ceil(totalSeconds / getNightlyFactor()));\n};\n\nconst converterToCentesimal = time => {\n    if (!time) return false;\n    const [hours, minutes] = removeUnderline(time).split(\":\");\n    return `${hours}.${Math.floor(minutes * 1.67)}`;\n};\n\nconst converterToSexagesimal = time => {\n    if (!time) return false;\n    let [hours, minutes] = removeUnderline(time).split(\".\");\n    return `${hours}:${Math.round(minutes / 1.67)\n        .toString()\n        .padStart(2, 0)}`;\n};\n\nconst secondsToHoursAndMinutes = (totalSeconds) => {\n    return `${extractHoursFromSeconds(totalSeconds).toString().padStart(2, 0)}:${extractMinutesFromSeconds(totalSeconds).toString().padStart(2, 0)}`;\n};\n\nconst hourToSeconds = hour => hour * 3600;\n\nconst minutesToSeconds = minutes => minutes * 60;\n\nconst removeUnderline = string => string.replaceAll(\"_\", \"0\");\n\nconst extractHoursFromSeconds = seconds => seconds > 0 ? Math.floor(seconds / 3600) : Math.floor(Math.abs(seconds) / 3600) * -1; \n\nconst extractMinutesFromSeconds = seconds => seconds > 0 ?  Math.floor((seconds % 3600) / 60) :  Math.floor((Math.abs(seconds) % 3600) / 60) * -1;\n\nconst getNightlyFactor = () => 8 / 7;\n\nexport {reset, extractHoursFromSeconds, extractMinutesFromSeconds, calcNightlyFactor, removeNightlyFactor, converterToCentesimal, converterToSexagesimal, secondsToHoursAndMinutes, removeUnderline, sumHoursAndMinutes, decreaseHoursAndMinutes };\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    left: 60%;\n    margin: auto;\n    font-family: 'Lucida Sans Unicode','Lucida Grande',sans-serif;\n    font-size: 13px;\n    color: #757575;\n\n    h1 {\n        margin-top: 30px;\n        font-size: 40px;\n    }\n`\n\nconst ContainerRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 20px;\n    margin-top: 25px;\n\n\n\n`\n\nconst TextAreaNoResize = styled.textarea`\n    resize: none;\n`\n\nconst Label = styled.label`\n    font-size: 25px;\n    font-weight: bold;\n    margin-right: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst Input = styled.input`\n    max-width: 70px;\n    text-align: center;\n    height: 30px;\n    margin-right: 20px;\n    border: 1px solid #919191\n`\n\nconst NightlyFactor = ({nightlyTime, setTime, calc, result, remove}) => {\n    const handleOnChangeValue = ({target: {value, name}}) => {\n        if(isNaN(value)) return;\n\n        setTime(nightlyTime => ({\n            ...nightlyTime,\n            [name]: value\n        }))\n    }\n\n    return (\n        <>\n        <Container>\n            <h1>Calculadora de adicional noturno</h1>\n            <ContainerRow>\n            <Label> Horas</Label>\n            <Input  name='hours' value={nightlyTime?.hours || ''} onChange={handleOnChangeValue}/>\n            <Label> Minutos</Label>\n            <Input name='minutes' value={nightlyTime?.minutes || ''} onChange={handleOnChangeValue} />\n        </ContainerRow>\n            <TextAreaNoResize\n                 readOnly\n                 cols='100'\n                 rows='10'\n                 value={\n                     Object.keys(result).length ? `O resultado da operação é ${result.hours.toString().padStart(2, 0)}:${result.minutes.toString().padStart(2, 0)}` : ''\n                 }\n            />\n            <ContainerRow>\n                <Button style={{marginRight: 20}} variant=\"contained\" color=\"primary\" onClick={calc}>\n                    Adicional Noturno\n                </Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={remove}>\n                    Remover adicional noturno\n                </Button>\n            </ContainerRow>\n        </Container>\n        </>\n    )\n}\n\nexport default NightlyFactor;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #676767;\n    margin-top: 30px;\n    flex-direction: column;\n\n    div {\n        margin: 20px 0px;\n\n        div {\n            margin-bottom: 30px;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            width: 40vw;\n\n            input{\n                height: 40px;\n                font-size: 20px;\n                text-align: center;\n                margin-left: 20px;\n            }\n            h3 {\n                margin-left: 30px;\n\n            }\n\n            div +div {\n                width: 10vw;\n            }\n        }\n    }\n`\n","import React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { converterToCentesimal, converterToSexagesimal } from \"../../helper/calculator\";\nimport { Container } from \"./style.js\";\n\nconst HoursConverter = () => {\n    const [sexagesimal, setSexagesimal] = useState(\"00:00\");\n    const [centesimal, setCentesimal] = useState(\"0.00\");\n\n    const handleChangeSexagesimal = (e) => setSexagesimal(converterToCentesimal(e.target.value));\n    const handleChangeCentesimal = (e) => setCentesimal(converterToSexagesimal(e.target.value));\n\n    return (\n        <Container>\n            <h1>Conversor de Horas</h1>\n            <div>\n                <div>\n                    <div>\n                        <h2>Valor em Sexagesimal </h2>\n                        <InputMask onChange={(e) => handleChangeSexagesimal(e)} mask=\"99:99\"></InputMask>\n                    </div>\n                    <div>\n                        <h3>{sexagesimal}</h3>\n                    </div>\n                </div>\n                <div>\n                    <div>\n                        <h2>Valor em Cetesimal </h2>\n                        <InputMask onChange={(e) => handleChangeCentesimal(e)} mask=\"99.99\"></InputMask>\n                    </div>\n                    <div>\n                        <h3>{centesimal}</h3>\n                    </div>\n                </div>\n            </div>\n            <p>*Converta horas de sexagesimal para centesimal e vice versa</p>\n        </Container>\n    );\n};\n\nexport default HoursConverter;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #676767;\n    margin-top: 30px;\n    flex-direction: column;\n\n    div {\n        margin-top: 30px;\n\n        div {\n            margin-bottom: 0px;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n\n\n            input{\n                height: 40px;\n                margin-left: 40px;\n                font-size: 20px;\n                text-align: center;\n            }\n        }\n    }\n\n    #result{\n        padding: 5px;\n        margin-bottom: 20px;\n        height: 50px;\n    }\n`\n","import Button from \"@material-ui/core/Button\";\nimport React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { removeUnderline, secondsToHoursAndMinutes } from \"../../helper/calculator\";\nimport { Container } from \"./style.js\";\n\nconst MultiplyingFactor = () => {\n    const [bancoDeHoras, setBancoDeHoras] = useState();\n    const [fator, setFator] = useState();\n    const [result, setResult] = useState();\n\n    const hoursToSeconds = ([hour, minutes]) => parseInt(hour) * 3600 + parseInt(minutes) * 60;\n\n    const factorMinutes = (seconds) => removeUnderline(fator) * seconds;\n\n    const handleClick = () => {\n        if (!bancoDeHoras || !fator) return false;\n\n        const seconds = hoursToSeconds(removeUnderline(bancoDeHoras).split(\":\"));\n        const hoursAndMinutes = secondsToHoursAndMinutes(factorMinutes(seconds));\n        setResult(hoursAndMinutes);\n    };\n\n    return (\n        <Container>\n            <h1>Fator Multiplicador</h1>\n            <div>\n                <div>\n                    <h3>Quantidade de Banco</h3>\n                    <InputMask onChange={(e) => setBancoDeHoras(e.target.value)} mask=\"99:99\"></InputMask>\n                </div>\n                <div>\n                    <h3>Fator Multiplicador </h3>\n                    <InputMask onChange={(e) => setFator(e.target.value)} mask=\"9.9\"></InputMask>\n                </div>\n            </div>\n            <div id=\"result\">{result && <h1>Resultado: {result}</h1>}</div>\n            <Button onClick={handleClick} variant=\"contained\" color=\"primary\" style={{ marginBottom: 50 }}>\n                Multiplicar\n            </Button>\n            <p>*Multiplique o banco pelo fator multiplicador</p>\n        </Container>\n    );\n};\n\nexport default MultiplyingFactor;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    padding-top: 30px;\n    color: #898989;\n`;\n\nexport const Modal = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 40vw;\n    border: 1px solid lightgray;\n    box-shadow: 0 0 10px lightgray;\n    padding: 30px;\n    margin-top: 20px;\n    background: whitesmoke;\n\n    hr {\n        width: 80%;\n        color: #898989;\n        margin-top: 30px;\n        margin-bottom: 10px;\n    }\n\n    #div-addNewButtons {\n        width: 60%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        justify-content: space-around;\n    }\n\n    #div-all-input-hours {\n        margin-top: 20px;\n        width: 80%;\n\n        .div-input-hours {\n            display: flex;\n            align-items: center;\n            justify-content: space-evenly;\n            margin-bottom: 10px;\n            input {\n                background-color: white;\n            }\n        }\n    }\n\n    #div-buttons {\n        margin-top: 30px;\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        width: 70%;\n    }\n\n    #div-results {\n        width: 80%;\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        margin-top: 10px;\n        input {\n            background-color: ghostwhite;\n        }\n    }\n`;\n","import { Button, TextField } from \"@material-ui/core\";\nimport { useRef, useState } from \"react\";\nimport { decreaseHoursAndMinutes, sumHoursAndMinutes } from '../../helper/calculator';\nimport { Container, Modal } from \"./styles\";\n\nfunction HoursCalculator() {\n    const [numberOfInputs, setNumberOfInputs] = useState(2);\n    const [result, setResult] = useState({hours: '', minutes: ''})\n\n    const hoursInputRef = useRef([]);\n    const minutesInputRef = useRef([]);\n\n    const resetFields = () => {\n        [...hoursInputRef.current, ...minutesInputRef.current].filter(value => value).forEach(elem => elem.value = '');\n        setResult({hours: '', minutes: ''})\n    };\n\n    const handleAddNewInputs = () => numberOfInputs === 31 || setNumberOfInputs(numberOfInputs + 1);\n\n    const handleRemoveLastInput = () => setNumberOfInputs(2);\n\n    const doCalc = (operation) => {\n        const hours = hoursInputRef.current.map(elem => elem?.value ? parseInt(elem.value) : 0);\n        const minutes = minutesInputRef.current.map(elem => elem?.value ? parseInt(elem.value) : 0);\n        setResult(operation === \"sum\" ? sumHoursAndMinutes({hours, minutes}) : decreaseHoursAndMinutes({hours, minutes}));\n    };\n\n    return (\n        <Container>\n            <h1>Calculadora de Horas</h1>\n            <Modal>\n                <div id=\"div-addNewButtons\">\n                    <Button style={{ backgroundColor: \"#a2cf6e\", color: \"white\", width: 147 }} onClick={handleAddNewInputs} variant=\"contained\">+</Button>\n                    <Button style={{ backgroundColor: \"tomato\", color: \"white\" }} onClick={handleRemoveLastInput} variant=\"contained\">Limpar campos</Button>\n                </div>\n                <div id=\"div-all-input-hours\">\n                    {new Array(numberOfInputs).fill(0).map((elem, index) => {\n                        return (\n                            <div className=\"div-input-hours\" key={index}>\n                                <TextField inputRef={(element) => (hoursInputRef.current[index] = element)} className=\"outlined-basic\" label=\"Horas\" variant=\"outlined\" />\n                                <TextField inputRef={(element) => (minutesInputRef.current[index] = element)} className=\"outlined-basic\" label=\"Minutos\" variant=\"outlined\" />\n                            </div>\n                        )})}\n                </div>\n                <div id=\"div-buttons\">\n                    <Button onClick={() => doCalc('sum')} variant=\"contained\" color=\"primary\">Adição</Button>\n                    <Button onClick={() => resetFields(\"reset\")} variant=\"contained\" color=\"secondary\">Reset</Button>\n                    <Button onClick={() => doCalc('decrease')} variant=\"contained\" color=\"primary\">Subtração</Button>\n                </div>\n                <hr />\n                <h1>Resultado</h1>\n                <div id=\"div-results\">\n                    <TextField id=\"filled-basic\"  inputProps={{ readOnly: true }}  variant=\"outlined\" label='Resultado Horas' value={result.hours} />\n                    <TextField id=\"filled-basic\" inputProps={{ readOnly: true }}  variant=\"outlined\" label='Resultado Minutos' value={result.minutes}  />\n                </div>\n            </Modal>\n        </Container>\n    );\n}\n\nexport default HoursCalculator;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport {  calcNightlyFactor, removeNightlyFactor } from \"../../helper/calculator\";\n\n//components\nimport Nightly from \"../../components/Nightly\";\n\n\n//pages\nimport HoursConverter from \"../../pages/hoursConverter\";\nimport MultiplyingFactor from \"../../pages/multiplyingFactor\";\nimport HoursCalculator from \"../../pages/hoursCalculator\";\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nconst IndexPage = () => {\n    const [value, setValue] = useState(0);\n    const [nightlyTime, setNightlyTime] = useState({});\n    const [resultNightly, setResultNightly] = useState({});\n\n    const calcNightly = () => {\n        const nightlyResult = calcNightlyFactor(nightlyTime);\n        setResultNightly(nightlyResult);\n    };\n\n    const calcRemoveNightlyFactor = () => {\n        const resultRemoval = removeNightlyFactor(nightlyTime);\n        setResultNightly(resultRemoval);\n    };\n\n    const tabChooser = {\n        0: <HoursCalculator />,\n        1: <Nightly nightlyTime={nightlyTime} setTime={setNightlyTime} result={resultNightly} calc={calcNightly} remove={calcRemoveNightlyFactor} />,\n        2: <HoursConverter />,\n        3: <MultiplyingFactor />,\n    };\n\n    const classes = useStyles();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <>\n            <Paper className={classes.root} style={{ position: \"fixed\", width: \"100vw\", zIndex: 1 }}>\n                <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" centered>\n                    <Tab label=\"Calculadora\" />\n                    <Tab label=\"Adicional Noturno\" />\n                    <Tab label=\"Conversor\" />\n                    <Tab label=\"Fator Multiplicador\" />\n                </Tabs>\n            </Paper>\n            <div style={{ paddingTop: 49 }}>{tabChooser[value]}</div>\n        </>\n    );\n};\n\nexport default IndexPage;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n     * {\n          margin:0;\n          padding:0;\n          outline: 0;\n          box-sizing: border-box;  \n          font-family: 'Roboto', sans-serif;\n         \n     }\n     #root {\n          margin: 0 auto;\n     }\n`;\n","import IndexPage from \"./pages/mainPage/index\";\nimport GlobalStyle from \"./styles/global\";\nfunction App() {\n    return (\n        <>\n            <IndexPage />\n            <GlobalStyle />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}